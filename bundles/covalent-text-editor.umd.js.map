{"version":3,"file":"covalent-text-editor.umd.js.map","sources":["ng://@covalent/text-editor/text-editor.component.ts","ng://@covalent/text-editor/text-editor.module.ts"],"sourcesContent":["import { Component, Input, AfterViewInit, ViewChild, ElementRef, forwardRef, NgZone, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport * as SimpleMDE from 'simplemde';\n// get access to the marked class under simplemde\nimport * as marked from 'marked';\ndeclare const require: any;\n/* tslint:disable-next-line */\nlet SimpleMDECss = require('simplemde/dist/simplemde.min.css');\n\nconst noop: any = () => {\n  // empty method\n};\n\n@Component({\n  selector: 'td-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdTextEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TdTextEditorComponent implements AfterViewInit, ControlValueAccessor {\n  private _value: string = '';\n  private _simpleMDE: any;\n  private _fromEditor: boolean = false;\n\n  @ViewChild('simplemde') textarea: ElementRef;\n  @Input() options: any = {};\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _zone: NgZone,\n    private _domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private _document: any,\n  ) {}\n\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    this._value = value;\n    if (this._simpleMDE) {\n      if (!this._fromEditor) {\n        this._simpleMDE.value(value);\n      }\n      this.propagateChange(this._value);\n      this._fromEditor = false;\n      this._zone.run(() => (this._value = value));\n    }\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  get simpleMDE(): any {\n    return this._simpleMDE;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = !value ? '' : value;\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  ngAfterViewInit(): void {\n    if (this._document) {\n      let styleElement: HTMLElement = this._document.createElement('style');\n      styleElement.innerHTML = <string>this._domSanitizer.bypassSecurityTrustHtml(String(SimpleMDECss));\n      this._document.head.appendChild(styleElement);\n    }\n    this.options.element = this.textarea.nativeElement;\n\n    // If content entered is html then don't evaluate it, prevent xss vulnerabilities\n    marked.setOptions({ sanitize: true });\n    this._simpleMDE = new SimpleMDE(this.options);\n    this._simpleMDE.value(this.value);\n    this._simpleMDE.codemirror.on('change', () => {\n      this._fromEditor = true;\n      this.writeValue(this._simpleMDE.value());\n    });\n  }\n\n  /* Wrapped function provided by SimpleMDE */\n\n  isPreviewActive(): boolean {\n    return this._simpleMDE.isPreviewActive();\n  }\n\n  isSideBySideActive(): boolean {\n    return this._simpleMDE.isSideBySideActive();\n  }\n\n  isFullscreenActive(): boolean {\n    return this._simpleMDE.isFullscreenActive();\n  }\n\n  clearAutosavedValue(): void {\n    this._simpleMDE.clearAutosavedValue();\n  }\n\n  toTextArea(): void {\n    this._simpleMDE.toTextArea();\n  }\n\n  toggleBold(): void {\n    this._simpleMDE.toggleBold();\n  }\n\n  toggleItalic(): void {\n    this._simpleMDE.toggleItalic();\n  }\n\n  toggleStrikethrough(): void {\n    this._simpleMDE.toggleStrikethrough();\n  }\n\n  toggleHeadingSmaller(): void {\n    this._simpleMDE.toggleHeadingSmaller();\n  }\n\n  toggleHeadingBigger(): void {\n    this._simpleMDE.toggleHeadingBigger();\n  }\n\n  toggleHeading1(): void {\n    this._simpleMDE.toggleHeading1();\n  }\n\n  toggleHeading2(): void {\n    this._simpleMDE.toggleHeading2();\n  }\n\n  toggleHeading3(): void {\n    this._simpleMDE.toggleHeading3();\n  }\n\n  toggleCodeBlock(): void {\n    this._simpleMDE.toggleCodeBlock();\n  }\n\n  toggleBlockquote(): void {\n    this._simpleMDE.toggleBlockquote();\n  }\n\n  toggleUnorderedList(): void {\n    this._simpleMDE.toggleUnorderedList();\n  }\n\n  toggleOrderedList(): void {\n    this._simpleMDE.toggleOrderedList();\n  }\n\n  cleanBlock(): void {\n    this._simpleMDE.cleanBlock();\n  }\n\n  drawLink(): void {\n    this._simpleMDE.drawLink();\n  }\n\n  drawImage(): void {\n    this._simpleMDE.drawImage();\n  }\n\n  drawTable(): void {\n    this._simpleMDE.drawTable();\n  }\n\n  drawHorizontalRule(): void {\n    this._simpleMDE.drawHorizontalRule();\n  }\n\n  togglePreview(): void {\n    this._simpleMDE.togglePreview();\n  }\n\n  toggleSideBySide(): void {\n    this._simpleMDE.toggleSideBySide();\n  }\n\n  toggleFullScreen(): void {\n    this._simpleMDE.toggleFullScreen();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdTextEditorComponent } from './text-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TdTextEditorComponent],\n  exports: [TdTextEditorComponent],\n  entryComponents: [],\n  bootstrap: [TdTextEditorComponent],\n})\nexport class CovalentTextEditorModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CovalentTextEditorModule,\n      providers: [],\n    };\n  }\n}\n"],"names":["marked.setOptions","Component","NG_VALUE_ACCESSOR","forwardRef","ElementRef","NgZone","DomSanitizer","Inject","DOCUMENT","ViewChild","Input","NgModule","CommonModule"],"mappings":"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"}
