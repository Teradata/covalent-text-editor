{"version":3,"file":"covalent-text-editor.umd.js","sources":["ng://@covalent/text-editor/text-editor.component.ts","ng://@covalent/text-editor/text-editor.module.ts"],"sourcesContent":["import { Component, Input, AfterViewInit, ViewChild, ElementRef, forwardRef, NgZone, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport * as SimpleMDE from 'simplemde';\n// get access to the marked class under simplemde\nimport * as marked from 'marked';\ndeclare const require: any;\n/* tslint:disable-next-line */\nlet SimpleMDECss = require('simplemde/dist/simplemde.min.css');\n\nconst noop: any = () => {\n  // empty method\n};\n\n@Component({\n  selector: 'td-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdTextEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TdTextEditorComponent implements AfterViewInit, ControlValueAccessor {\n  private _value: string = '';\n  private _simpleMDE: any;\n  private _fromEditor: boolean = false;\n\n  @ViewChild('simplemde', { static: true }) textarea: ElementRef;\n  @Input() options: any = {};\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _zone: NgZone,\n    private _domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private _document: any,\n  ) {}\n\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    this._value = value;\n    if (this._simpleMDE) {\n      if (!this._fromEditor) {\n        this._simpleMDE.value(value);\n      }\n      this.propagateChange(this._value);\n      this._fromEditor = false;\n      this._zone.run(() => (this._value = value));\n    }\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  get simpleMDE(): any {\n    return this._simpleMDE;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = !value ? '' : value;\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  ngAfterViewInit(): void {\n    if (this._document) {\n      let styleElement: HTMLElement = this._document.createElement('style');\n      styleElement.innerHTML = <string>this._domSanitizer.bypassSecurityTrustHtml(String(SimpleMDECss));\n      this._document.head.appendChild(styleElement);\n    }\n    this.options.element = this.textarea.nativeElement;\n\n    // If content entered is html then don't evaluate it, prevent xss vulnerabilities\n    marked.setOptions({ sanitize: true });\n    this._simpleMDE = new SimpleMDE(this.options);\n    this._simpleMDE.value(this.value);\n    this._simpleMDE.codemirror.on('change', () => {\n      this._fromEditor = true;\n      this.writeValue(this._simpleMDE.value());\n    });\n  }\n\n  /* Wrapped function provided by SimpleMDE */\n\n  isPreviewActive(): boolean {\n    return this._simpleMDE.isPreviewActive();\n  }\n\n  isSideBySideActive(): boolean {\n    return this._simpleMDE.isSideBySideActive();\n  }\n\n  isFullscreenActive(): boolean {\n    return this._simpleMDE.isFullscreenActive();\n  }\n\n  clearAutosavedValue(): void {\n    this._simpleMDE.clearAutosavedValue();\n  }\n\n  toTextArea(): void {\n    this._simpleMDE.toTextArea();\n  }\n\n  toggleBold(): void {\n    this._simpleMDE.toggleBold();\n  }\n\n  toggleItalic(): void {\n    this._simpleMDE.toggleItalic();\n  }\n\n  toggleStrikethrough(): void {\n    this._simpleMDE.toggleStrikethrough();\n  }\n\n  toggleHeadingSmaller(): void {\n    this._simpleMDE.toggleHeadingSmaller();\n  }\n\n  toggleHeadingBigger(): void {\n    this._simpleMDE.toggleHeadingBigger();\n  }\n\n  toggleHeading1(): void {\n    this._simpleMDE.toggleHeading1();\n  }\n\n  toggleHeading2(): void {\n    this._simpleMDE.toggleHeading2();\n  }\n\n  toggleHeading3(): void {\n    this._simpleMDE.toggleHeading3();\n  }\n\n  toggleCodeBlock(): void {\n    this._simpleMDE.toggleCodeBlock();\n  }\n\n  toggleBlockquote(): void {\n    this._simpleMDE.toggleBlockquote();\n  }\n\n  toggleUnorderedList(): void {\n    this._simpleMDE.toggleUnorderedList();\n  }\n\n  toggleOrderedList(): void {\n    this._simpleMDE.toggleOrderedList();\n  }\n\n  cleanBlock(): void {\n    this._simpleMDE.cleanBlock();\n  }\n\n  drawLink(): void {\n    this._simpleMDE.drawLink();\n  }\n\n  drawImage(): void {\n    this._simpleMDE.drawImage();\n  }\n\n  drawTable(): void {\n    this._simpleMDE.drawTable();\n  }\n\n  drawHorizontalRule(): void {\n    this._simpleMDE.drawHorizontalRule();\n  }\n\n  togglePreview(): void {\n    this._simpleMDE.togglePreview();\n  }\n\n  toggleSideBySide(): void {\n    this._simpleMDE.toggleSideBySide();\n  }\n\n  toggleFullScreen(): void {\n    this._simpleMDE.toggleFullScreen();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdTextEditorComponent } from './text-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TdTextEditorComponent],\n  exports: [TdTextEditorComponent],\n  entryComponents: [],\n  bootstrap: [TdTextEditorComponent],\n})\nexport class CovalentTextEditorModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CovalentTextEditorModule,\n      providers: [],\n    };\n  }\n}\n"],"names":["marked.setOptions","Component","NG_VALUE_ACCESSOR","forwardRef","ElementRef","NgZone","DomSanitizer","Inject","DOCUMENT","ViewChild","Input","NgModule","CommonModule"],"mappings":"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"}