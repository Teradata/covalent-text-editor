{"version":3,"sources":["ng://@covalent/text-editor/text-editor.component.ts","ng://@covalent/text-editor/text-editor.module.ts"],"names":["SimpleMDECss","require","noop","TdTextEditorComponent","_elementRef","_zone","_domSanitizer","_document","this","_value","_fromEditor","options","propagateChange","_","onTouched","Object","defineProperty","prototype","value","_this","_simpleMDE","run","writeValue","registerOnChange","fn","registerOnTouched","ngAfterViewInit","styleElement","createElement","innerHTML","bypassSecurityTrustHtml","String","head","appendChild","element","textarea","nativeElement","marked.setOptions","sanitize","SimpleMDE","codemirror","on","isPreviewActive","isSideBySideActive","isFullscreenActive","clearAutosavedValue","toTextArea","toggleBold","toggleItalic","toggleStrikethrough","toggleHeadingSmaller","toggleHeadingBigger","toggleHeading1","toggleHeading2","toggleHeading3","toggleCodeBlock","toggleBlockquote","toggleUnorderedList","toggleOrderedList","cleanBlock","drawLink","drawImage","drawTable","drawHorizontalRule","togglePreview","toggleSideBySide","toggleFullScreen","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ElementRef","NgZone","DomSanitizer","Inject","DOCUMENT","ViewChild","static","Input","CovalentTextEditorModule","forRoot","ngModule","NgModule","imports","CommonModule","declarations","exports","entryComponents","bootstrap"],"mappings":"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","sourcesContent":["import { Component, Input, AfterViewInit, ViewChild, ElementRef, forwardRef, NgZone, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport * as SimpleMDE from 'simplemde';\n// get access to the marked class under simplemde\nimport * as marked from 'marked';\ndeclare const require: any;\n/* tslint:disable-next-line */\nlet SimpleMDECss = require('simplemde/dist/simplemde.min.css');\n\nconst noop: any = () => {\n  // empty method\n};\n\n@Component({\n  selector: 'td-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdTextEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TdTextEditorComponent implements AfterViewInit, ControlValueAccessor {\n  private _value: string = '';\n  private _simpleMDE: any;\n  private _fromEditor: boolean = false;\n\n  @ViewChild('simplemde', { static: true }) textarea: ElementRef;\n  @Input() options: any = {};\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _zone: NgZone,\n    private _domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private _document: any,\n  ) {}\n\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    this._value = value;\n    if (this._simpleMDE) {\n      if (!this._fromEditor) {\n        this._simpleMDE.value(value);\n      }\n      this.propagateChange(this._value);\n      this._fromEditor = false;\n      this._zone.run(() => (this._value = value));\n    }\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  get simpleMDE(): any {\n    return this._simpleMDE;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = !value ? '' : value;\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  ngAfterViewInit(): void {\n    if (this._document) {\n      let styleElement: HTMLElement = this._document.createElement('style');\n      styleElement.innerHTML = <string>this._domSanitizer.bypassSecurityTrustHtml(String(SimpleMDECss));\n      this._document.head.appendChild(styleElement);\n    }\n    this.options.element = this.textarea.nativeElement;\n\n    // If content entered is html then don't evaluate it, prevent xss vulnerabilities\n    marked.setOptions({ sanitize: true });\n    this._simpleMDE = new SimpleMDE(this.options);\n    this._simpleMDE.value(this.value);\n    this._simpleMDE.codemirror.on('change', () => {\n      this._fromEditor = true;\n      this.writeValue(this._simpleMDE.value());\n    });\n  }\n\n  /* Wrapped function provided by SimpleMDE */\n\n  isPreviewActive(): boolean {\n    return this._simpleMDE.isPreviewActive();\n  }\n\n  isSideBySideActive(): boolean {\n    return this._simpleMDE.isSideBySideActive();\n  }\n\n  isFullscreenActive(): boolean {\n    return this._simpleMDE.isFullscreenActive();\n  }\n\n  clearAutosavedValue(): void {\n    this._simpleMDE.clearAutosavedValue();\n  }\n\n  toTextArea(): void {\n    this._simpleMDE.toTextArea();\n  }\n\n  toggleBold(): void {\n    this._simpleMDE.toggleBold();\n  }\n\n  toggleItalic(): void {\n    this._simpleMDE.toggleItalic();\n  }\n\n  toggleStrikethrough(): void {\n    this._simpleMDE.toggleStrikethrough();\n  }\n\n  toggleHeadingSmaller(): void {\n    this._simpleMDE.toggleHeadingSmaller();\n  }\n\n  toggleHeadingBigger(): void {\n    this._simpleMDE.toggleHeadingBigger();\n  }\n\n  toggleHeading1(): void {\n    this._simpleMDE.toggleHeading1();\n  }\n\n  toggleHeading2(): void {\n    this._simpleMDE.toggleHeading2();\n  }\n\n  toggleHeading3(): void {\n    this._simpleMDE.toggleHeading3();\n  }\n\n  toggleCodeBlock(): void {\n    this._simpleMDE.toggleCodeBlock();\n  }\n\n  toggleBlockquote(): void {\n    this._simpleMDE.toggleBlockquote();\n  }\n\n  toggleUnorderedList(): void {\n    this._simpleMDE.toggleUnorderedList();\n  }\n\n  toggleOrderedList(): void {\n    this._simpleMDE.toggleOrderedList();\n  }\n\n  cleanBlock(): void {\n    this._simpleMDE.cleanBlock();\n  }\n\n  drawLink(): void {\n    this._simpleMDE.drawLink();\n  }\n\n  drawImage(): void {\n    this._simpleMDE.drawImage();\n  }\n\n  drawTable(): void {\n    this._simpleMDE.drawTable();\n  }\n\n  drawHorizontalRule(): void {\n    this._simpleMDE.drawHorizontalRule();\n  }\n\n  togglePreview(): void {\n    this._simpleMDE.togglePreview();\n  }\n\n  toggleSideBySide(): void {\n    this._simpleMDE.toggleSideBySide();\n  }\n\n  toggleFullScreen(): void {\n    this._simpleMDE.toggleFullScreen();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdTextEditorComponent } from './text-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TdTextEditorComponent],\n  exports: [TdTextEditorComponent],\n  entryComponents: [],\n  bootstrap: [TdTextEditorComponent],\n})\nexport class CovalentTextEditorModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CovalentTextEditorModule,\n      providers: [],\n    };\n  }\n}\n"]}