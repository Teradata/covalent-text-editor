{"version":3,"file":"covalent-text-editor.js.map","sources":["ng://@covalent/text-editor/text-editor.component.ts","ng://@covalent/text-editor/text-editor.module.ts"],"sourcesContent":["import { Component, Input, AfterViewInit, ViewChild, ElementRef, forwardRef, NgZone, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport * as SimpleMDE from 'simplemde';\n// get access to the marked class under simplemde\nimport * as marked from 'marked';\ndeclare const require: any;\n/* tslint:disable-next-line */\nlet SimpleMDECss = require('simplemde/dist/simplemde.min.css');\n\nconst noop: any = () => {\n  // empty method\n};\n\n@Component({\n  selector: 'td-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: [ './text-editor.component.scss' ],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdTextEditorComponent),\n    multi: true,\n  }],\n})\nexport class TdTextEditorComponent implements AfterViewInit, ControlValueAccessor {\n\n  private _value: string = '';\n  private _simpleMDE: any;\n  private _fromEditor: boolean = false;\n\n  @ViewChild('simplemde') textarea: ElementRef;\n  @Input() options: any = {};\n\n  constructor(private _elementRef: ElementRef,\n              private _zone: NgZone,\n              private _domSanitizer: DomSanitizer,\n              @Inject(DOCUMENT) private _document: any) {}\n\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    this._value = value;\n    if (this._simpleMDE) {\n      if (!this._fromEditor) {\n        this._simpleMDE.value(value);\n      }\n      this.propagateChange(this._value);\n      this._fromEditor = false;\n      this._zone.run(() => this._value = value);\n    }\n  }\n\n  get value(): string {\n      return this._value;\n  }\n\n  get simpleMDE(): any {\n    return this._simpleMDE;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = (!value) ? '' : value;\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  ngAfterViewInit(): void {\n    if (this._document) {\n      let styleElement: HTMLElement = this._document.createElement('style');\n      styleElement.innerHTML = <string>this._domSanitizer.bypassSecurityTrustHtml(String(SimpleMDECss));\n      this._document.head.appendChild(styleElement);\n    }\n    this.options.element = this.textarea.nativeElement;\n\n    // If content entered is html then don't evaluate it, prevent xss vulnerabilities\n    marked.setOptions({ sanitize: true });\n    this._simpleMDE = new SimpleMDE(this.options);\n    this._simpleMDE.value(this.value);\n    this._simpleMDE.codemirror.on('change', () => {\n      this._fromEditor = true;\n      this.writeValue(this._simpleMDE.value());\n    });\n  }\n\n  /* Wrapped function provided by SimpleMDE */\n\n  isPreviewActive(): boolean {\n    return this._simpleMDE.isPreviewActive();\n  }\n\n  isSideBySideActive(): boolean {\n    return this._simpleMDE.isSideBySideActive();\n  }\n\n  isFullscreenActive(): boolean {\n    return this._simpleMDE.isFullscreenActive();\n  }\n\n  clearAutosavedValue(): void {\n    this._simpleMDE.clearAutosavedValue();\n  }\n\n  toTextArea(): void {\n    this._simpleMDE.toTextArea();\n  }\n\n  toggleBold(): void {\n    this._simpleMDE.toggleBold();\n  }\n\n  toggleItalic(): void {\n    this._simpleMDE.toggleItalic();\n  }\n\n  toggleStrikethrough(): void {\n    this._simpleMDE.toggleStrikethrough();\n  }\n\n  toggleHeadingSmaller(): void {\n    this._simpleMDE.toggleHeadingSmaller();\n  }\n\n  toggleHeadingBigger(): void {\n    this._simpleMDE.toggleHeadingBigger();\n  }\n\n  toggleHeading1(): void {\n    this._simpleMDE.toggleHeading1();\n  }\n\n  toggleHeading2(): void {\n    this._simpleMDE.toggleHeading2();\n  }\n\n  toggleHeading3(): void {\n    this._simpleMDE.toggleHeading3();\n  }\n\n  toggleCodeBlock(): void {\n    this._simpleMDE.toggleCodeBlock();\n  }\n\n  toggleBlockquote(): void {\n    this._simpleMDE.toggleBlockquote();\n  }\n\n  toggleUnorderedList(): void {\n    this._simpleMDE.toggleUnorderedList();\n  }\n\n  toggleOrderedList(): void {\n    this._simpleMDE.toggleOrderedList();\n  }\n\n  cleanBlock(): void {\n    this._simpleMDE.cleanBlock();\n  }\n\n  drawLink(): void {\n    this._simpleMDE.drawLink();\n  }\n\n  drawImage(): void {\n    this._simpleMDE.drawImage();\n  }\n\n  drawTable(): void {\n    this._simpleMDE.drawTable();\n  }\n\n  drawHorizontalRule(): void {\n    this._simpleMDE.drawHorizontalRule();\n  }\n\n  togglePreview(): void {\n    this._simpleMDE.togglePreview();\n  }\n\n  toggleSideBySide(): void {\n    this._simpleMDE.toggleSideBySide();\n  }\n\n  toggleFullScreen(): void {\n    this._simpleMDE.toggleFullScreen();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdTextEditorComponent } from './text-editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TdTextEditorComponent,\n  ],\n  exports: [\n    TdTextEditorComponent,\n  ],\n  entryComponents: [ ],\n  bootstrap: [ TdTextEditorComponent ],\n})\nexport class CovalentTextEditorModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CovalentTextEditorModule,\n      providers: [ ],\n    };\n  }\n}\n"],"names":["marked.setOptions"],"mappings":";;;;;;;;;;;AAAA;;IASI,YAAY,GAAG,OAAO,CAAC,kCAAkC,CAAC;;IAExD,IAAI,GAAQ;;CAEjB;;IAqBC,+BAAoB,WAAuB,EACvB,KAAa,EACb,aAA2B,EACT,SAAc;QAHhC,gBAAW,GAAX,WAAW,CAAY;QACvB,UAAK,GAAL,KAAK,CAAQ;QACb,kBAAa,GAAb,aAAa,CAAc;QACT,cAAS,GAAT,SAAS,CAAK;QAV5C,WAAM,GAAW,EAAE,CAAC;QAEpB,gBAAW,GAAY,KAAK,CAAC;QAG5B,YAAO,GAAQ,EAAE,CAAC;;QAQ3B,oBAAe,GAAG,UAAC,CAAM,KAAO,CAAC;QACjC,cAAS,GAAG,cAAM,OAAA,IAAI,GAAA,CAAC;KAJiC;IAUxD,sBACI,wCAAK;;;;QAYT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;;;;;;;;;QAfD,UACU,KAAa;YADvB,iBAWC;YATC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC9B;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,GAAG,KAAK,GAAA,CAAC,CAAC;aAC3C;SACF;;;OAAA;IAMD,sBAAI,4CAAS;;;;QAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;;;OAAA;;;;;;;;;IAKD,0CAAU;;;;;IAAV,UAAW,KAAU;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC;KACpC;;;;;IACD,gDAAgB;;;;IAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;;;;;IACD,iDAAiB;;;;IAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;;;;IAED,+CAAe;;;IAAf;QAAA,iBAgBC;QAfC,IAAI,IAAI,CAAC,SAAS,EAAE;;gBACd,YAAY,GAAgB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC;YACrE,YAAY,CAAC,SAAS,sBAAW,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAA,CAAC;YAClG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;;QAGnDA,UAAiB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;YACtC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;SAC1C,CAAC,CAAC;KACJ;;;;;;IAID,+CAAe;;;;IAAf;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;KAC1C;;;;IAED,kDAAkB;;;IAAlB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC;KAC7C;;;;IAED,kDAAkB;;;IAAlB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC;KAC7C;;;;IAED,mDAAmB;;;IAAnB;QACE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;KACvC;;;;IAED,0CAAU;;;IAAV;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;KAC9B;;;;IAED,0CAAU;;;IAAV;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;KAC9B;;;;IAED,4CAAY;;;IAAZ;QACE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;KAChC;;;;IAED,mDAAmB;;;IAAnB;QACE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;KACvC;;;;IAED,oDAAoB;;;IAApB;QACE,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC;KACxC;;;;IAED,mDAAmB;;;IAAnB;QACE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;KACvC;;;;IAED,8CAAc;;;IAAd;QACE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;KAClC;;;;IAED,8CAAc;;;IAAd;QACE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;KAClC;;;;IAED,8CAAc;;;IAAd;QACE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;KAClC;;;;IAED,+CAAe;;;IAAf;QACE,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;KACnC;;;;IAED,gDAAgB;;;IAAhB;QACE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;KACpC;;;;IAED,mDAAmB;;;IAAnB;QACE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;KACvC;;;;IAED,iDAAiB;;;IAAjB;QACE,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;KACrC;;;;IAED,0CAAU;;;IAAV;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;KAC9B;;;;IAED,wCAAQ;;;IAAR;QACE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;;;;IAED,yCAAS;;;IAAT;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;KAC7B;;;;IAED,yCAAS;;;IAAT;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;KAC7B;;;;IAED,kDAAkB;;;IAAlB;QACE,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC;KACtC;;;;IAED,6CAAa;;;IAAb;QACE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;KACjC;;;;IAED,gDAAgB;;;IAAhB;QACE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;KACpC;;;;IAED,gDAAgB;;;IAAhB;QACE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;KACpC;;gBAxLF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,6DAA2C;oBAE3C,SAAS,EAAE,CAAC;4BACV,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,qBAAqB,GAAA,CAAC;4BACpD,KAAK,EAAE,IAAI;yBACZ,CAAC;;iBACH;;;;gBAxBoD,UAAU;gBAAc,MAAM;gBAE1E,YAAY;gDAmCN,MAAM,SAAC,QAAQ;;;2BAN3B,SAAS,SAAC,WAAW;0BACrB,KAAK;wBAeL,KAAK,SAAC,OAAO;;IAyJhB,4BAAC;CAzLD;;;;;;ACfA;IAMA;KAoBC;;;;IANQ,gCAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,wBAAwB;YAClC,SAAS,EAAE,EAAG;SACf,CAAC;KACH;;gBAnBF,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,YAAY,EAAE;wBACZ,qBAAqB;qBACtB;oBACD,OAAO,EAAE;wBACP,qBAAqB;qBACtB;oBACD,eAAe,EAAE,EAAG;oBACpB,SAAS,EAAE,CAAE,qBAAqB,CAAE;iBACrC;;IAQD,+BAAC;CApBD;;;;;;;;;;;;;;;;;;;"}
